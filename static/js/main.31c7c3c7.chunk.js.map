{"version":3,"sources":["progate.svg","progate_lg.svg","components/Header.js","components/Lesson.js","components/ContactForm.js","components/Main.js","components/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Logo","alt","Lesson","props","state","isModalOpen","this","setState","modal","name","introduction","onClick","handleClickClose","handleClickLesson","image","React","Component","ContactForm","isSubmitted","email","hasEmailError","content","hasContentError","event","inputValue","target","value","isEmpty","emailErrorText","contentErrorText","contactForm","onSubmit","handleSubmit","onChange","handleEmailChange","required","handleContentChange","type","Main","map","lessonItem","key","Footer","logo","list","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.31c7c3c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/progate.a02452e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/progate_lg.7f995bc8.svg\";","import React from 'react';\nimport Logo from '../progate.svg'\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <div className='header-logo'>\n        <img src={Logo} alt=\"logo\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nclass Lesson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isModalOpen: false };\n  }\n\n  handleClickLesson() {\n    this.setState({ isModalOpen: true });\n  }\n\n  handleClickClose() {\n    this.setState({\n      isModalOpen: false\n    });\n  }\n\n  render() {\n    let modal;\n    if (this.state.isModalOpen) {\n      modal = (\n        <div className='modal'>\n          <div className='modal-inner'>\n            <div className='modal-header'></div>\n            <div className='modal-introduction'>\n              <h2>{this.props.name}</h2>\n              <p>{this.props.introduction}</p>\n            </div>\n\n            <button\n              className='modal-close-btn'\n              onClick={() => {\n                this.handleClickClose();\n              }}>\n              Close\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className='lesson-card'>\n        <div\n          className='lesson-item'\n          onClick={() => {\n            this.handleClickLesson();\n          }}>\n          <p>{this.props.name}</p>\n          <img src={this.props.image} alt='course modal' />\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default Lesson;\n","import React from 'react';\n\nclass ContactForm extends React.Component {\n  state = {\n    isSubmitted: false,\n    email: '',\n    hasEmailError: false,\n    content: '',\n    hasContentError: false\n  };\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty\n    });\n  }\n\n  /* Declare the method handleContentChange */\n  handleContentChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content: inputValue,\n      hasContentError: isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({ isSubmitted: true });\n  }\n\n  render() {\n    let emailErrorText;\n    if (this.state.hasEmailError) {\n      emailErrorText = (\n        <p className='contact-message-error'>Please enter your email address</p>\n      );\n    }\n\n    /* Declare the variable contentErrorText */\n    let contentErrorText;\n    if (this.state.hasContentError) {\n      contentErrorText = (\n        <p className='contact-message-error'>Please enter your message</p>\n      );\n    }\n\n    let contactForm;\n    if (this.state.isSubmitted) {\n      contactForm = (\n        <div className='contact-submit-message'>Sent Successfully</div>\n      );\n    } else {\n      contactForm = (\n        <form\n          onSubmit={() => {\n            this.handleSubmit();\n          }}>\n          <p>\n            Email Address <span>(required)</span>\n          </p>\n          <input\n            value={this.state.email}\n            onChange={event => {\n              this.handleEmailChange(event);\n            }}\n          />\n          {emailErrorText}\n          <p>\n            Message <span>(required)</span>\n          </p>\n          {/* Add the value and an onChange event */}\n          <textarea\n            required\n            value={this.state.content}\n            onChange={event => {\n              this.handleContentChange(event);\n            }}\n          />\n          {/* Display contentErrorText  */}\n          {contentErrorText}\n\n          <input type='submit' value='Send' />\n        </form>\n      );\n    }\n\n    return <div className='contact-form'>{contactForm}</div>;\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport Lesson from './Lesson';\nimport ContactForm from './ContactForm';\n\nclass Main extends React.Component {\n  render() {\n    const lessonList = [\n      {\n        name: 'HTML & CSS',\n        image:\n          'https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/react/html.svg',\n        introduction:\n          \"How a website looks is created using languages such as HTML and CSS. Let's study these languages while actually creating a website!\"\n      },\n      {\n        name: 'Sass',\n        image:\n          'https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/react/sass.svg',\n        introduction:\n          'Sass is a language for making CSS more convenient and efficient.'\n      },\n      {\n        name: 'JavaScript',\n        image:\n          'https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/react/es6.svg',\n        introduction:\n          'JavaScript is a versatile language used anywhere from interactive websites to backend servers.'\n      },\n      {\n        name: 'React',\n        image:\n          'https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/react/react.svg',\n        introduction:\n          'React is a JavaScript library used to make the appearance of a website like HTML.'\n      }\n    ];\n\n    return (\n      <div className='main-wrapper'>\n        <div className='container main'>\n          <h1 className='main-header'>Progate.</h1>\n          <h2 className='main-subheader'>Programming can change your life!</h2>\n\n          <div className='lesson-container'>\n            <h3>Lessons</h3>\n            {lessonList.map(lessonItem => {\n              return (\n                <Lesson\n                  name={lessonItem.name}\n                  image={lessonItem.image}\n                  introduction={lessonItem.introduction}\n                  key={lessonItem.name}\n                />\n              );\n            })}\n          </div>\n          <div className='contact-container'>\n            <h3>Contact Us</h3>\n            <ContactForm />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport logo from '../progate_lg.svg'\n\nconst Footer = () => {\n  const footer = ['Services', 'Support', 'Connect with us'];\n  return (\n    <div className='footer'>\n      <div className='container footer-inner'>\n        <div className='footer-logo'>\n          <img\n            src={logo}\n            alt='progate'\n          />\n          <p>Learn to code, learn to creative.</p>\n        </div>\n        <ul className='footer-list'>\n          {footer.map((list) => {\n            return (\n              <li className=\"footer__item\" key={list}>{list}</li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Main from '../components/Main';\nimport Footer from '../components/Footer';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}